Barefoot Networks Switch Package
================================
The <switch> package contains switch.p4, a P4 program that implements the
pipeline for standard switching functions. The package also contains sources
for building libraries that provide API to manipulate the switch.

The <switch> package is organized as follows
    p4src: P4 sources
    switchsai: Sources for SAI library
    switchapi: Sources for SwitchAPI library
    ptf-tests: P4 dependent(PD), SAI, API tests and Openflow tests

There are two ways the switch package can be built
    1) simple mode (i.e. Thrift API generation disabled)
    2) thrift mode (i.e. Thrift API generation enabled)

The build mode is specified using the 'enable_thrift=<yes|no>' option of the
./configure step of building. If this option is unspecified thrift is disabled

The following optional configure options are supported
    1) --with-tofino: Build for "Tofino" target
    2) --with-tofinobm: Build for TofinoBM target
    3) --with-switchapi: Build with switchapi
    4) --with-switchsai: Build with switchsai, will build switchapi as well

NOTE:
    1) In order to exercise PTF tests, thrift mode needs to be enabled.
    2) Building in thrift mode requires additional third-party pkgs to be
       installed (see $SDE/install_thrift_deps.sh).
    3) In order to exercise API tests, configure with --with-switchapi option.
    4) In order to exercise SAI tests, configure with --with-switchsai option.
    5) In order to exercise PD tests, none of the options --with-switchapi,
       --with-switchsai should be used.
    6) Only one of the options --with-switchapi, --with-switchsai
       should be used at a time, to change the configure
       options after build, make clean and make uninstall before re-configure.

# Building and installing in simple mode <TBD: Doesn't work as yet>
Here're the steps to build and install the <switch> package in simple mode

    # Make sure path to the compiler binary is set
    export PATH=$SDE_INSTALL/bin:$PATH

    cd <switch>
    ./configure --prefix=$SDE_INSTALL [--with-tofino] [--with-tofinobm]
                [-host=i386-linux-gnu CFLAGS=-m32 CXXFLAGS=-m32 LDFLAGS=-m32]
    make
    make install

NOTE: The optional arguments shown above for the 'configure' script are required
to cross-compile the package libraries for a 32-bit i686 CPU based target

# Building and installing in THRIFT mode
Here're the steps to build and install the <switch> package in thrift mode

    # Install additional packages needed for thrift API generation
    $SDE/install_thrift_deps.sh

    # Install additional packages needed for building netlink library
    $SDE/<switch>/install_switch_deps.sh

    # Make sure path to the compiler binary is set
    export PATH=$SDE_INSTALL/bin:$PATH

    cd <switch>
    ./configure --prefix=$SDE_INSTALL enable_thrift=yes
                [--with-tofino]
                [--with-tofinobm]
                [--with-switchsai | --with-switchapi]
                [--with-cpu-veth]
                [-host=i386-linux-gnu CFLAGS=-m32 CXXFLAGS=-m32 LDFLAGS=-m32]
    make
    make install

NOTE 1: By default switch.conf, the bf_switchd configuration file, is setup to
configure switchAPI to use the PCIe port as the CPU port. The '--with-cpu-veth'
option can be used to configure switchAPI to use Ethernet port as the CPU
connected port and additionally specify its linux interface name. When
exercising the SDE on the SW models, this is option is required to exercise PTF
scripts that switch packets to the CPU.

NOTE 2: To build a particular profile specify P4PPFLAGS during build time. For specific
compiler options use P4FLAGS.

Examples:

NAT_PROFILE:
 make P4PPFLAGS=-DNAT_PROFILE P4FLAGS='--placement-order=egress_before_ingress'
CLPM_PROFILE:
 make P4PPFLAGS=-DL3_IPV4_FIB_CLPM_PROFILE P4FLAGS='--placement-order=ingress_and_egress'

Artifacts installed
===================
Here're the artifacts that get installed for <switch>

Simple mode build artifacts:

  o header files for switch related API to $SDE_INSTALL/include/switch/
        switchapi/ : header files for switchAPI library
        switchsai/ : header files for switchSAI library

  o P4 (switch.p4) dependent auto-generated artifacts
      * header files for auto-generated P4 dependent (PD) library
        to $SDE_INSTALL/include/switch/pd

      * libraries for auto-generated P4 dependent sources
        to $SDE_INSTALL/lib/switch
          - libpd.[a,la,so]
          - libpdthrift.[a,la,so]

      * data files generated for bf-drivers
        to $SDE_INSTALL/share/p4/switch
          - mau.context.json: pipeline resource context for the driver
          - p4_name_lookup.json: context for model logging
          - tofino.bin: configuration for Tofino device

      * conf files needed by switchd application for PTF tests
        to $SDE_INSTALL/share/p4/targets/tofino/switch*.conf


  o libswitchapi.[a,la,so] to $SDE_INSTALL/lib/
        library with API to manage switching

  o libswitchsai.[a,la,so] to $SDE_INSTALL/lib/
        SAI standard API to manage switching

Thrift mode additional build artifacts:

    libswitchapi and libswitchsai also include thrift versions of the API


Documentation:
==============
    sudo apt-get install doxygen
    cd doc; make doc


Switch Profiles:
================

*******************************************************************************************
PROFILE NAME                    | P4PPFLAGS                        | P4FLAGS              *
*******************************************************************************************
DC_BASIC_PROFILE                |-DDC_BASIC_PROFILE                |                      *
ENT_FIN_POSTCARD_PROFILE        |-DENT_FIN_POSTCARD_PROFILE        |                      *
ENT_DC_GENERAL_PROFILE          |-DENT_DC_GENERAL_PROFILE          |                      *
MSDC_PROFILE                    |-DMSDC_PROFILE                    |                      *
MSDC_L3_PROFILE                 |-DMSDC_L3_PROFILE                 |                      *
MSDC_IPV4_PROFILE               |-DMSDC_IPV4_PROFILE               |                      *
MSDC_LEAF_DTEL_INT_PROFILE      |-DMSDC_LEAF_DTEL_INT_PROFILE      |                      *
MSDC_SPINE_DTEL_INT_PROFILE     |-DMSDC_SPINE_DTEL_INT_PROFILE     |                      *
L3_HEAVY_INT_LEAF_PROFILE       |-DL3_HEAVY_INT_LEAF_PROFILE       |                      *
GENERIC_INT_LEAF_PROFILE        |-DGENERIC_INT_LEAF_PROFILE        |                      *
*******************************************************************************************

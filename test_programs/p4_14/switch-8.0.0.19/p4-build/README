Barefoot Networks <p4-build> Package
====================================
The <p4-build> package contains build infrastructure to compile P4 programs and
build and install associated libraries and artifacts. p4-build supports
building P4 programs for one or more P4 targets (e.g. bmv2, tofino, tofinobm, etc)

#Dependencies
#
It's expected the drivers and P4 compilers corresponding to the P4 targets
are installed prior to building the P4 program. More specifically
  * when building --with-bmv2, it is required that the <bmv2> package is built
    and installed with the --with-pdfixed option, and <p4c-bmv2> is installed
  * when building --with-tofino, it is required that the <bf-drivers> package
    is built and installed and <p4c-tofino> is installed
  * when building --with-tofinobm, it is required that the <tofinobm>
    package is built and installed with the --with-pdfixed option, and
    <p4c-bmv2> is installed
  * Python2 (>= 2.7)

# Building and installing 
#
Compiling a P4 program requires the full absolute path to the 
P4 program (P4_PATH) and the P4 program name (P4_NAME) to be supplied at
the time of `configure`. `P4_PREFIX` option can optionally be specified
if it is desired the PD API prefix be different than P4_NAME.

P4 compiler flags can be passed using the P4FLAGS variable. P4 pre-processor
flags can be passed using the P4PPFLAGS variable.

See `configure -h` for more details.

A P4 program can be configured to be built for one or more P4 targets at the 
same time using the target options listed below
    * --with-bmv2: Build for "Simple Switch Behavioral Model" target
    * --with-tofino: Build for "Tofino" target
    * --with-tofinobm: Build for "Tofino on Behavioral Model" target

Here're the steps to build a P4 program and install the artifacts

    1. cd <p4-build>
    2. ./autogen.sh
    3. ./configure --prefix=$SDE_INSTALL        \
          [--with-bmv2]                         \
          [--with-tofino]                       \
          [--with-tofinobm]                     \
          P4_NAME=<name of P4 program>          \
          P4_PATH=<absolute path to P4 program> \
          [P4_PREFIX=<prefix to use for PD APIs>] 
    4. make [P4FLAGS=<P4 compiler flags>] [P4PPFLAGS=<P4 pre-processor flags]
    5. make install

Note that the setup assumes that the binaries and the headers are installed
in standard locations (e.g., /usr/bin, /usr/include) or in `prefix`.
If the `--prefix` option is overwritten with a location which does not contain
the SDE installation, you can still use this script by doing both of the following:
    * ensuring that the SDE binaries are in the PATH, e.g.:
      `export PATH=$SDE_INSTALL/bin:$PATH`
    * providing an include path to the configure script, e.g.:
      `./configure --prefix=<non-sde-install-dir>     \
                   CPPFLAGS="-I$SDE_INSTALL/include"`


# Building and installing with thrift bindings for PD API (needed for PTF)
#
PTF python test scripts need Python-Thrift bindings in order to make PD API
calls over Thrift-RPC. Similarly the process that hosts the PD API library will
need C-Thrift bindings to process Thrift-RPC messages and make 'C' PD API calls.

The above mentioned Thrift bindings can be produced by specifying an
additional `configure` option `--enable-thrift`

NOTE:
    1) Building thrift bindings requires additional third-party pkgs to be
       installed (see $SDE/install_thrift_deps.sh)

Artifacts installed for Tofino target (when P4 built with --with-tofino)
========================================================================
  - P4 program dependent auto-generated artifacts
      * header files for auto-generated P4 dependent (PD) library
        to $SDE_INSTALL/include/<p4_program_name>/pd

      * libraries for auto-generated P4 dependent sources
        to $SDE_INSTALL/lib/<p4_program_name>/
          - libpd.[a,la,so]

      * data files generated for bf-drivers
        to $SDE_INSTALL/share/p4/<p4_program_name>/
          - context.json: pipeline resource context for the driver
          - p4_name_lookup.json: context for model logging
          - tofino.bin: configuration for Tofino device

      * conf files needed by switchd application for PTF tests
        to $SDE_INSTALL/share/p4/targets/<p4_program_name>*.conf

Additional build artifacts installed when built with --enable-thrift:
=====================================================================
  - P4 program dependent auto-generated artifacts
      * libraries for auto-generated P4 dependent sources
        to $SDE_INSTALL/lib/<p4_program_name>/
          - libpdthrift.[a,la,so]

Here's a summary of the installed artifacts for the Tofino target

```
├── bin
├── include
│   └── tofinopd
│       └── <$P4_NAME>
│           └── pd
│               └── pd.h
├── lib
│   ├── tofinopd
│   │   └── <$P4_NAME>
│   │       ├── libpd.a
│   │       ├── libpd.la
│   │       ├── libpd.so -> libpd.so.0.0.0
│   │       ├── libpd.so.0 -> libpd.so.0.0.0
│   │       ├── libpd.so.0.0.0
│   │       ├── libpdthrift.a
│   │       ├── libpdthrift.la
│   │       ├── libpdthrift.so -> libpdthrift.so.0.0.0
│   │       ├── libpdthrift.so.0 -> libpdthrift.so.0.0.0
│   │       └── libpdthrift.so.0.0.0
│   └── python2.7
│       └── site-packages
│           └── tofinopd
│               └── <$P4_NAME>
│                   └── p4_pd_rpc
│                       ├── constants.py
│                       ├── __init__.py
│                       ├── <$P4_NAME>.py
│                       └── ttypes.py
└── share
    └─ tofinopd
       └── <P4_NAME>
           ├── context.json
           ├── p4_name_lookup.json
           └── tofino.bin
 
            
Artifacts installed for bmv2 target (when P4 built with --with-bmv2)
====================================================================
```
The following describes what can potentially be installed when a P4 program
of name $P4_NAME is built for the bmv2 target (--with-bmv2)

```
.
├── bin
├── include
│   └── bmpd
│       └── <$P4_NAME>
│           └── pd
│               ├── pd_counters.h
│               ├── pd.h
│               ├── pd_learning.h
│               ├── pd_meters.h
│               ├── pd_mirroring.h
│               ├── pd_registers.h
│               ├── pd_rpc_server.h
│               ├── pd_tables.h
│               └── pd_types.h
├── lib
│   ├── bmpd
│   │   └── <$P4_NAME>
│   │       ├── libpd.a
│   │       ├── libpd.la
│   │       ├── libpd.so -> libpd.so.0.0.0
│   │       ├── libpd.so.0 -> libpd.so.0.0.0
│   │       ├── libpd.so.0.0.0
│   │       ├── libpdthrift.a
│   │       ├── libpdthrift.la
│   │       ├── libpdthrift.so -> libpdthrift.so.0.0.0
│   │       ├── libpdthrift.so.0 -> libpdthrift.so.0.0.0
│   │       └── libpdthrift.so.0.0.0
│   └── python2.7
│       └── site-packages
│           └── bmpd
│               └── <$P4_NAME>
│                   ├── p4_pd_rpc
│                   │   ├── constants.py
│                   │   ├── __init__.py
│                   │   ├── <$P4_NAME>.py
│                   │   ├── <$P4_NAME>-remote
│                   │   └── ttypes.py
│                   └── res_pd_rpc
│                       ├── constants.py
│                       ├── __init__.py
│                       └── ttypes.py
└── share
    └── bmpd
        └── <$P4_NAME>
            └── <$P4_NAME>.json
```
Artifacts installed for bmv2 target (when P4 built with --with-tofinobm)
====================================================================
```
The following describes what can potentially be installed when a P4 program
of name $P4_NAME is built for the tofinobm target (--with-tofinobm)

```
.
├── bin
│   ├── tofinobm_p4_drivers
│   └── tofinobmv2
├── include
│   └── tofinobmpd
│       └── <$P4_NAME>
│           ├── pd
│           │   ├── pd_counters.h
│           │   ├── pd.h
│           │   ├── pd_learning.h
│           │   ├── pd_meters.h
│           │   ├── pd_registers.h
│           │   ├── pd_tables.h
│           │   └── pd_types.h
│           └── thrift-src
│               └── pd_rpc_server.h
├── lib
│   ├── python2.7
│   │   └── site-packages
│   │       └── tofinobmpd
│   │           └── <$P4_NAME>
│   │               ├── <$P4_NAME>_p4_pd_rpc
│   │               │   ├── constants.py
│   │               │   ├── constants.pyc
│   │               │   ├── constants.pyo
│   │               │   ├── __init__.py
│   │               │   ├── __init__.pyc
│   │               │   ├── __init__.pyo
│   │               │   ├── <$P4_NAME>.py
│   │               │   ├── <$P4_NAME>.pyc
│   │               │   ├── <$P4_NAME>.pyo
│   │               │   ├── <$P4_NAME>-remote
│   │               │   ├── ttypes.py
│   │               │   ├── ttypes.pyc
│   │               │   └── ttypes.pyo
│   │               └── res_pd_rpc
│   │                   ├── constants.py
│   │                   ├── constants.pyc
│   │                   ├── constants.pyo
│   │                   ├── __init__.py
│   │                   ├── __init__.pyc
│   │                   ├── __init__.pyo
│   │                   ├── ttypes.py
│   │                   ├── ttypes.pyc
│   │                   └── ttypes.pyo
│   └── tofinobmpd
│       └── <$P4_NAME>
│           ├── libpd.a
│           ├── libpd.la
│           ├── libpd.so -> libpd.so.0.0.0
│           ├── libpd.so.0 -> libpd.so.0.0.0
│           ├── libpd.so.0.0.0
│           ├── libpdthrift.a
│           ├── libpdthrift.la
│           ├── libpdthrift.so -> libpdthrift.so.0.0.0
│           ├── libpdthrift.so.0 -> libpdthrift.so.0.0.0
│           └── libpdthrift.so.0.0.0
└── share
    └── tofinobmpd
        └── <$P4_NAME>
            └── <$P4_NAME>.json

```

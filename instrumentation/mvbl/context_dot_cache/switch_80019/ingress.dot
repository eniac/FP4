digraph ingress {
subgraph cluster {
graph [
label="", labeljust=r, style=bold];
0[label=__START__, margin="", shape=rectangle, style=solid];
1[label=__EXIT__, margin="", shape=rectangle, style=solid];
2[label=ingress_port_properties, margin="", shape=ellipse, style=solid];
3[label=switch_config_params, margin="", shape=ellipse, style=solid];
4[label=validate_outer_ethernet, margin="", shape=ellipse, style=solid];
5[label="hdr.ipv4.isValid();", margin="", shape=rectangle, style=solid];
6[label=validate_outer_ipv4_packet, margin="", shape=ellipse, style=solid];
7[label="hdr.ipv6.isValid();", margin="", shape=rectangle, style=solid];
8[label=validate_outer_ipv6_packet, margin="", shape=ellipse, style=solid];
9[label="hdr.mpls[0].isValid();", margin="", shape=rectangle, style=solid];
10[label=validate_mpls_packet, margin="", shape=ellipse, style=solid];
11[label="hdr.fabric_header_cpu.isValid();", margin="", shape=rectangle, style=solid];
12[label=cpu_packet_transform, margin="", shape=ellipse, style=solid];
13[label=port_vlan_to_bd_mapping, margin="", shape=ellipse, style=solid];
14[label=port_vlan_to_ifindex_mapping, margin="", shape=ellipse, style=solid];
15[label=adjust_lkp_fields, margin="", shape=ellipse, style=solid];
16[label="meta.ingress_metadata.port_type == 0 && meta.l2_metadata.stp_group != 0;", margin="", shape=rectangle, style=solid];
17[label=spanning_tree, margin="", shape=ellipse, style=solid];
18[label="meta.ingress_metadata.port_type != 0;", margin="", shape=rectangle, style=solid];
19[label=fabric_ingress_dst_lkp, margin="", shape=ellipse, style=solid];
20[label="meta.ingress_metadata.port_type == 0;", margin="", shape=rectangle, style=solid];
21[label=storm_control, margin="", shape=ellipse, style=solid];
22[label="!(hdr.mpls[0].isValid() && meta.l3_metadata.fib_hit == 1);", margin="", shape=rectangle, style=solid];
23[label="meta.ingress_metadata.bypass_lookups & 64 == 0 && meta.ingress_metadata.drop_flag == 0;", margin="", shape=rectangle, style=solid];
24[label=validate_packet, margin="", shape=ellipse, style=solid];
25[label=ingress_l4_src_port, margin="", shape=ellipse, style=solid];
26[label=ingress_l4_dst_port, margin="", shape=ellipse, style=solid];
27[label="meta.ingress_metadata.bypass_lookups & 128 == 0 && meta.ingress_metadata.port_type == 0;", margin="", shape=rectangle, style=solid];
28[label=smac, margin="", shape=ellipse, style=solid];
29[label="meta.ingress_metadata.bypass_lookups & 1 == 0;", margin="", shape=rectangle, style=solid];
30[label=dmac, margin="", shape=ellipse, style=solid];
31[label="meta.l3_metadata.lkp_ip_type == 0;", margin="", shape=rectangle, style=solid];
32[label="meta.ingress_metadata.bypass_lookups & 4 == 0;", margin="", shape=rectangle, style=solid];
33[label=mac_acl, margin="", shape=ellipse, style=solid];
34[label="meta.ingress_metadata.bypass_lookups & 4 == 0;", margin="", shape=rectangle, style=solid];
35[label="meta.l3_metadata.lkp_ip_type == 1;", margin="", shape=rectangle, style=solid];
36[label=ip_acl, margin="", shape=ellipse, style=solid];
37[label="meta.l3_metadata.lkp_ip_type == 2;", margin="", shape=rectangle, style=solid];
38[label=ipv6_acl, margin="", shape=ellipse, style=solid];
39[label="meta.l2_metadata.lkp_pkt_type == 1;", margin="", shape=rectangle, style=solid];
40[label=rmac, margin="", shape=ellipse, style=solid];
41[label="meta.ingress_metadata.bypass_lookups & 2 == 0;", margin="", shape=rectangle, style=solid];
42[label="meta.l3_metadata.lkp_ip_type == 1 && meta.ipv4_metadata.ipv4_unicast_enabled == 1;", margin="", shape=rectangle, style=solid];
43[label=ipv4_racl, margin="", shape=ellipse, style=solid];
44[label="meta.ipv4_metadata.ipv4_urpf_mode != 0;", margin="", shape=rectangle, style=solid];
45[label=ipv4_urpf, margin="", shape=ellipse, style=solid];
46[label=ipv4_urpf_lpm, margin="", shape=ellipse, style=solid];
47[label=ipv4_fib, margin="", shape=ellipse, style=solid];
48[label=ipv4_fib_lpm, margin="", shape=ellipse, style=solid];
49[label="meta.l3_metadata.lkp_ip_type == 2 && meta.ipv6_metadata.ipv6_unicast_enabled == 1;", margin="", shape=rectangle, style=solid];
50[label=ipv6_racl, margin="", shape=ellipse, style=solid];
51[label="meta.ipv6_metadata.ipv6_urpf_mode != 0;", margin="", shape=rectangle, style=solid];
52[label=ipv6_urpf, margin="", shape=ellipse, style=solid];
53[label=ipv6_urpf_lpm, margin="", shape=ellipse, style=solid];
54[label=ipv6_fib, margin="", shape=ellipse, style=solid];
55[label=ipv6_fib_lpm, margin="", shape=ellipse, style=solid];
56[label="meta.l3_metadata.urpf_mode == 2 && meta.l3_metadata.urpf_hit == 1;", margin="", shape=rectangle, style=solid];
57[label=urpf_bd, margin="", shape=ellipse, style=solid];
58[label="meta.l3_metadata.lkp_ip_type == 1;", margin="", shape=rectangle, style=solid];
59[label="meta.ingress_metadata.bypass_lookups & 1 == 0;", margin="", shape=rectangle, style=solid];
60[label=ipv4_multicast_bridge, margin="", shape=ellipse, style=solid];
61[label=ipv4_multicast_bridge_star_g, margin="", shape=ellipse, style=solid];
62[label="meta.ingress_metadata.bypass_lookups & 2 == 0 && meta.multicast_metadata.ipv4_multicast_enabled == 1;", margin="", shape=rectangle, style=solid];
63[label=ipv4_multicast_route, margin="", shape=ellipse, style=solid];
64[label=ipv4_multicast_route_star_g, margin="", shape=ellipse, style=solid];
65[label="meta.l3_metadata.lkp_ip_type == 2;", margin="", shape=rectangle, style=solid];
66[label="meta.ingress_metadata.bypass_lookups & 1 == 0;", margin="", shape=rectangle, style=solid];
67[label=ipv6_multicast_bridge, margin="", shape=ellipse, style=solid];
68[label=ipv6_multicast_bridge_star_g, margin="", shape=ellipse, style=solid];
69[label="meta.ingress_metadata.bypass_lookups & 2 == 0 && meta.multicast_metadata.ipv6_multicast_enabled == 1;", margin="", shape=rectangle, style=solid];
70[label=ipv6_multicast_route, margin="", shape=ellipse, style=solid];
71[label=ipv6_multicast_route_star_g, margin="", shape=ellipse, style=solid];
72[label="meta.tunnel_metadata.tunnel_terminate == 0 && hdr.ipv4.isValid() || meta.tunnel_metadata.tunnel_terminate == 1 && hdr.inner_ipv4.isValid();", margin="", shape=rectangle, style=solid];
73[label=compute_ipv4_hashes, margin="", shape=ellipse, style=solid];
74[label="meta.tunnel_metadata.tunnel_terminate == 0 && hdr.ipv6.isValid() || meta.tunnel_metadata.tunnel_terminate == 1 && hdr.inner_ipv6.isValid();", margin="", shape=rectangle, style=solid];
75[label=compute_ipv6_hashes, margin="", shape=ellipse, style=solid];
76[label=compute_non_ip_hashes, margin="", shape=ellipse, style=solid];
77[label=compute_other_hashes, margin="", shape=ellipse, style=solid];
78[label=ingress_bd_stats, margin="", shape=ellipse, style=solid];
79[label=acl_stats, margin="", shape=ellipse, style=solid];
80[label=storm_control_stats, margin="", shape=ellipse, style=solid];
81[label="meta.ingress_metadata.bypass_lookups != 255;", margin="", shape=rectangle, style=solid];
82[label=fwd_result, margin="", shape=ellipse, style=solid];
83[label="meta.nexthop_metadata.nexthop_type == 1;", margin="", shape=rectangle, style=solid];
84[label=ecmp_group, margin="", shape=ellipse, style=solid];
85[label=nexthop, margin="", shape=ellipse, style=solid];
86[label="meta.ingress_metadata.egress_ifindex == 16383;", margin="", shape=rectangle, style=solid];
87[label=bd_flood, margin="", shape=ellipse, style=solid];
88[label="meta.tunnel_metadata.tunnel_dst_index != 0;", margin="", shape=rectangle, style=solid];
89[label=lag_group, margin="", shape=ellipse, style=solid];
90[label="meta.l2_metadata.learning_enabled == 1 && meta.l2_metadata.port_learning_enabled == 1;", margin="", shape=rectangle, style=solid];
91[label=learn_notify, margin="", shape=ellipse, style=solid];
92[label=racl_stats, margin="", shape=ellipse, style=solid];
93[label="meta.ingress_metadata.port_type != 1;", margin="", shape=rectangle, style=solid];
94[label="meta.ingress_metadata.bypass_lookups & 32 == 0;", margin="", shape=rectangle, style=solid];
95[label=system_acl, margin="", shape=ellipse, style=solid];
96[label="meta.ingress_metadata.drop_flag == 1;", margin="", shape=rectangle, style=solid];
97[label=drop_stats, margin="", shape=ellipse, style=solid];
98[label=tbl_act, margin="", shape=ellipse, style=solid];
0 -> 2[label=""];
2 -> 3[label=""];
3 -> 4[label=""];
4 -> 5[label=default];
4 -> 11[label="_malformed_outer_ethernet_packet_0/malformed_outer_ethernet_packet;"];
5 -> 6[label=TRUE];
5 -> 7[label=FALSE];
6 -> 9[label=""];
7 -> 8[label=TRUE];
7 -> 9[label=FALSE];
8 -> 9[label=""];
9 -> 10[label=TRUE];
9 -> 11[label=FALSE];
10 -> 11[label=""];
11 -> 12[label=TRUE];
11 -> 13[label=FALSE];
12 -> 14[label=""];
13 -> 14[label=""];
14 -> 15[label=""];
15 -> 16[label=""];
16 -> 17[label=TRUE];
16 -> 18[label=FALSE];
17 -> 18[label=""];
18 -> 19[label=TRUE];
18 -> 20[label=FALSE];
19 -> 20[label=""];
20 -> 21[label=TRUE];
20 -> 22[label=FALSE];
21 -> 22[label=""];
22 -> 23[label=TRUE];
22 -> 72[label=FALSE];
23 -> 24[label=TRUE];
23 -> 25[label=FALSE];
24 -> 25[label=""];
25 -> 26[label=""];
26 -> 27[label=""];
27 -> 28[label=TRUE];
27 -> 29[label=FALSE];
28 -> 29[label=""];
29 -> 30[label=TRUE];
29 -> 31[label=FALSE];
30 -> 31[label=""];
31 -> 32[label=TRUE];
31 -> 34[label=FALSE];
32 -> 33[label=TRUE];
32 -> 39[label=FALSE];
33 -> 39[label=""];
34 -> 35[label=TRUE];
34 -> 39[label=FALSE];
35 -> 36[label=TRUE];
35 -> 37[label=FALSE];
36 -> 39[label=""];
37 -> 38[label=TRUE];
37 -> 39[label=FALSE];
38 -> 39[label=""];
39 -> 40[label=TRUE];
39 -> 58[label=FALSE];
40 -> 41[label="rmac_hit_1/rmac_hit;"];
40 -> 72[label=default];
41 -> 42[label=TRUE];
41 -> 72[label=FALSE];
42 -> 43[label=TRUE];
42 -> 49[label=FALSE];
43 -> 44[label=""];
44 -> 45[label=TRUE];
44 -> 47[label=FALSE];
45 -> 46[label="_on_miss/on_miss;"];
45 -> 47[label=default];
46 -> 47[label=""];
47 -> 48[label="_on_miss_0/on_miss;"];
47 -> 56[label=default];
48 -> 56[label=""];
49 -> 50[label=TRUE];
49 -> 56[label=FALSE];
50 -> 51[label=""];
51 -> 52[label=TRUE];
51 -> 54[label=FALSE];
52 -> 53[label="_on_miss_2/on_miss;"];
52 -> 54[label=default];
53 -> 54[label=""];
54 -> 55[label="_on_miss_11/on_miss;"];
54 -> 56[label=default];
55 -> 56[label=""];
56 -> 57[label=TRUE];
56 -> 72[label=FALSE];
57 -> 72[label=""];
58 -> 59[label=TRUE];
58 -> 65[label=FALSE];
59 -> 60[label=TRUE];
59 -> 62[label=FALSE];
60 -> 61[label="_on_miss_13/on_miss;"];
60 -> 62[label=default];
61 -> 62[label=""];
62 -> 63[label=TRUE];
62 -> 72[label=FALSE];
63 -> 64[label="_on_miss_14/on_miss_0;"];
63 -> 72[label=default];
64 -> 72[label=""];
65 -> 66[label=TRUE];
65 -> 72[label=FALSE];
66 -> 67[label=TRUE];
66 -> 69[label=FALSE];
67 -> 68[label="_on_miss_17/on_miss;"];
67 -> 69[label=default];
68 -> 69[label=""];
69 -> 70[label=TRUE];
69 -> 72[label=FALSE];
70 -> 71[label="_on_miss_18/on_miss_1;"];
70 -> 72[label=default];
71 -> 72[label=""];
72 -> 73[label=TRUE];
72 -> 74[label=FALSE];
73 -> 77[label=""];
74 -> 75[label=TRUE];
74 -> 76[label=FALSE];
75 -> 77[label=""];
76 -> 77[label=""];
77 -> 78[label=""];
78 -> 79[label=""];
79 -> 80[label=""];
80 -> 81[label=""];
81 -> 82[label=TRUE];
81 -> 83[label=FALSE];
82 -> 83[label=""];
83 -> 84[label=TRUE];
83 -> 85[label=FALSE];
84 -> 86[label=""];
85 -> 86[label=""];
86 -> 87[label=TRUE];
86 -> 88[label=FALSE];
87 -> 90[label=""];
88 -> 89[label=FALSE];
88 -> 90[label=TRUE];
89 -> 90[label=""];
90 -> 91[label=TRUE];
90 -> 92[label=FALSE];
91 -> 92[label=""];
92 -> 93[label=""];
93 -> 94[label=TRUE];
93 -> 98[label=FALSE];
94 -> 95[label=TRUE];
94 -> 98[label=FALSE];
95 -> 96[label=""];
96 -> 97[label=TRUE];
96 -> 98[label=FALSE];
97 -> 98[label=""];
98 -> 1[label=""];
}
}
